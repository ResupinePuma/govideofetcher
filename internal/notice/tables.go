package notice

import "errors"

var tableEng map[notice]string = map[notice]string{
	ErrSizeLimitReached.notice:   "ü™® Sorry, media is too large. I can't download it",
	ErrTimeout.notice:            "‚åõ Sorry, timeout. External service takes a long time to respond or the video is too big. Try again later",
	ErrInvalidURL.notice:         "üò§ URL incorrect. Fix and try again",
	ErrInvalidResponse.notice:    "ü§î Sorry, something happened and I can't download it now. Try again later",
	ErrNotFound.notice:           "üëÄ Sorry, I can't find media behind that link",
	ErrUnsupportedService.notice: "üõë This service is prohibited due regional restrictons",
	ErrUnexpectedError.notice:    "üíî Oops, unexpected error. Try again later",

	NoticeMediaFound: "üì£ I found %v media. Start sending",
	NoticeGotLink:    "Got link. üëÄ at üìº",
	NoticeDone:       "Done! ‚úÖ",
}

var tableRus map[notice]string = map[notice]string{
	ErrSizeLimitReached.notice:   "ü™® –ò–∑–≤–∏–Ω–∏—Ç–µ, –º–µ–¥–∏–∞—Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –Ø –Ω–µ –º–æ–≥—É –µ–≥–æ —Å–∫–∞—á–∞—Ç—å",
	ErrInvalidURL.notice:         "üò§ –ù–µ–≤–µ—Ä–Ω—ã–π URL. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
	ErrTimeout.notice:            "‚åõ –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –í–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
	ErrInvalidResponse.notice:    "ü§î –ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∏ —è —Å–µ–π—á–∞—Å –Ω–µ –º–æ–≥—É —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ",
	ErrNotFound.notice:           "üëÄ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ",
	ErrUnsupportedService.notice: "üõë –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑-–∑–∞ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π",
	ErrUnexpectedError.notice:    "üíî –£–ø—Å, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",

	NoticeMediaFound:       "üì£ –Ø –Ω–∞—à—ë–ª %v –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤. –ù–∞—á–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É",
	NoticeGotLink:          "–û–ø–∞, —Å—Å—ã–ª–∫–∞. üëÄ –Ω–∞ üìº",
	NoticeDone:             "–í—Å—ë! ‚úÖ",
	NoticeUsageGet:         "<–°—Å—ã–ª–∫–∞> <–∑–∞–≥–æ–ª–æ–≤–æ–∫ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)> - —Å–∫–∞—á–∞—Ç—å –º–µ–¥–∏–∞ –ø–æ —Å—Å—ã–ª–∫–µ",
	NoticeUsageNotFound:    "–∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
	NoticeDownloadingMedia: "‚è¨ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞",
}

func translateError(err nerror, lang string) string {
	if lang == "" {
		return translateError(err, "en")
	}

	switch lang {
	case "ru":
		t, ok := tableRus[err.notice]
		if ok {
			return t
		} else {
			return tableRus[ErrUnexpectedError.notice]
		}
	default:
		t, ok := tableEng[err.notice]
		if ok {
			return t
		} else {
			return tableEng[ErrUnexpectedError.notice]
		}
	}
}

func TranslateError(err error, lang string) string {
	var parsed nerror
	if errors.As(err, &parsed) {
		return translateError(parsed, lang)
	}

	switch lang {
	case "ru":
		return tableRus[ErrUnexpectedError.notice]
	default:
		return tableEng[ErrUnexpectedError.notice]
	}
}

func TranslateNotice(text notice, lang string) string {
	switch lang {
	case "ru":
		t, ok := tableRus[text]
		if ok {
			return t
		}
	default:
		t, ok := tableEng[text]
		if ok {
			return t
		}
	}

	return text.String()
}
